# Stocks microservice section
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: stocks
    namespace: bsp
    labels:
        app: stocks
spec:
    replicas: 1
    selector:
        matchLabels:
            app: stocks
    template:
        metadata:
            labels:
                app: stocks
        spec:
            containers:
                - name: stocks
                  image: public.ecr.aws/g6j5x0b6/bsp:stocks-latest
                  imagePullPolicy: IfNotPresent
                  ports:
                      - containerPort: 5004
                  livenessProbe:
                      httpGet:
                          path: /health # Le chemin pour la vérification de la santé du microservice
                          port: 5004
                      initialDelaySeconds: 15
                      periodSeconds: 10

#Stocks service section
---
apiVersion: v1
kind: Service
metadata:
    name: stocks-service
    namespace: bsp
    annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
    selector:
        app: stocks
    ports:
        - protocol: TCP
          port: 81
          targetPort: 5004
    type: LoadBalancer

#Stocks database section
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: dbstocks
    namespace: bsp
spec:
    replicas: 1
    selector:
        matchLabels:
            app: dbstocks
            tier: postgres
    template:
        metadata:
            labels:
                app: dbstocks
                tier: postgres
        spec:
            containers:
                - name: db-stocks
                  image: postgres:latest
                  imagePullPolicy: IfNotPresent
                  ports:
                      - containerPort: 5432
                  env:
                      - name: POSTGRES_DB
                        value: stocks
                      - name: POSTGRES_USER
                        value: stocks
                      - name: POSTGRES_PASSWORD
                        value: stocks

#Products microservice section
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: products
    namespace: bsp
    labels:
        app: products
spec:
    replicas: 1
    selector:
        matchLabels:
            app: products
    template:
        metadata:
            labels:
                app: products
        spec:
            containers:
                - name: products
                  image: public.ecr.aws/g6j5x0b6/bsp:products-latest
                  imagePullPolicy: IfNotPresent
                  ports:
                      - containerPort: 5003
                  livenessProbe:
                      httpGet:
                          path: /health # Le chemin pour la vérification de la santé du microservice
                          port: 5003
                      initialDelaySeconds: 15
                      periodSeconds: 10

#Products service section
---
apiVersion: v1
kind: Service
metadata:
    name: products-service
    namespace: bsp
    annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
    selector:
        app: products
    ports:
        - protocol: TCP
          port: 82
          targetPort: 5003
    type: LoadBalancer

#Products database section
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: dbproducts
    namespace: bsp
spec:
    replicas: 1
    selector:
        matchLabels:
            app: dbproducts
            tier: postgres
    template:
        metadata:
            labels:
                app: dbproducts
                tier: postgres
        spec:
            containers:
                - name: db-products
                  image: postgres:latest
                  imagePullPolicy: IfNotPresent
                  ports:
                      - containerPort: 5432
                  env:
                      - name: POSTGRES_DB
                        value: products
                      - name: POSTGRES_USER
                        value: products
                      - name: POSTGRES_PASSWORD
                        value: products

#Cart microservice section
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: cart
    namespace: bsp
    labels:
        app: cart
spec:
    replicas: 1
    selector:
        matchLabels:
            app: cart
    template:
        metadata:
            labels:
                app: cart
        spec:
            containers:
                - name: cart
                  image: public.ecr.aws/g6j5x0b6/bsp:cart-latest
                  imagePullPolicy: IfNotPresent
                  ports:
                      - containerPort: 5002
                  livenessProbe:
                      httpGet:
                          path: /health # Le chemin pour la vérification de la santé du microservice
                          port: 5002
                      initialDelaySeconds: 15
                      periodSeconds: 10

#Cart service section
---
apiVersion: v1
kind: Service
metadata:
    name: cart-service
    namespace: bsp
    annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
    selector:
        app: cart
    ports:
        - protocol: TCP
          port: 83
          targetPort: 5002
    type: LoadBalancer

#Cart database section
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: dbcart
    namespace: bsp
spec:
    replicas: 1
    selector:
        matchLabels:
            app: dbcart
            tier: postgres
    template:
        metadata:
            labels:
                app: dbcart
                tier: postgres
        spec:
            containers:
                - name: db-cart
                  image: postgres:latest
                  imagePullPolicy: IfNotPresent
                  ports:
                      - containerPort: 5432
                  env:
                      - name: POSTGRES_DB
                        value: cart
                      - name: POSTGRES_USER
                        value: cart
                      - name: POSTGRES_PASSWORD
                        value: cart

#Gateway section
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: gateway
    namespace: bsp
    labels:
        app: gateway
spec:
    replicas: 1
    selector:
        matchLabels:
            app: gateway
    template:
        metadata:
            labels:
                app: gateway
        spec:
            containers:
                - name: gateway
                  image: public.ecr.aws/g6j5x0b6/bsp:gateway-latest
                  imagePullPolicy: IfNotPresent
                  ports:
                      - containerPort: 5000

#Gateway service section
---
apiVersion: v1
kind: Service
metadata:
    name: gateway-service
    namespace: bsp
    annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
    selector:
        app: gateway
    ports:
        - protocol: TCP
          port: 84
          targetPort: 5000
    type: LoadBalancer

#Gateway database section
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: dbgateway
    namespace: bsp
spec:
    replicas: 1
    selector:
        matchLabels:
            app: dbgateway
            tier: postgres
    template:
        metadata:
            labels:
                app: dbgateway
                tier: postgres
        spec:
            containers:
                - name: db-gateway
                  image: postgres:latest
                  imagePullPolicy: IfNotPresent
                  ports:
                      - containerPort: 5432
                  env:
                      - name: POSTGRES_DB
                        value: gateway
                      - name: POSTGRES_USER
                        value: gateway
                      - name: POSTGRES_PASSWORD
                        value: gateway

#Client section
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: frontend
    namespace: bsp
    labels:
        app: frontend
spec:
    replicas: 1
    selector:
        matchLabels:
            app: frontend
    template:
        metadata:
            labels:
                app: frontend
        spec:
            containers:
                - name: client
                  image: public.ecr.aws/g6j5x0b6/bsp:client-latest
                  imagePullPolicy: IfNotPresent
                  ports:
                      - containerPort: 3000

#Client service section
---
apiVersion: v1
kind: Service
metadata:
    name: frontend-service
    namespace: bsp
    annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
    selector:
        app: frontend
    ports:
        - protocol: TCP
          port: 80
          targetPort: 3000
    type: LoadBalancer
